
The morphological skeleton of an image is the set of its non-zero pixels which are equidistant to its boundaries.
More info: http://en.wikipedia.org/wiki/Topological_skeleton

Thinning an image consits in reducing its non-zero pixels to their morphological skeleton.
More info: http://en.wikipedia.org/wiki/Thinning_(morphology)

VoronoiSkeleton is a C++ class
made for the fast computing of Voronoi diagrams of monochrome images.
It contains different implementations of thinning algorithms:

* Zhang - Suen explained in 'A fast parallel algorithm for thinning digital
patterns' by T.Y. Zhang and C.Y. Suen and based on implentation by
http://opencv-code.com/quick-tips/implementation-of-thinning-algorithm-in-opencv/

* Guo - Hall explained in 'Parallel thinning with two sub-iteration
algorithms' by Zicheng Guo and Richard Hall and based on implentation by
http://opencv-code.com/quick-tips/implementation-of-guo-hall-thinning-algorithm/

* a morphological one, based on the erode() and dilate() operators.
Coming from: http://felix.abecassis.me/2011/09/opencv-morphological-skeleton/

A special care has been given to optimize the 2 first ones. Instead of
re-examining the whole image at each iteration, only the pixels of the
current contour are considered. This leads to a speedup by almost 100 times
on experimental tests.

** Compiling

You need to install OpenCV first.

Then, the project is based on a CMakeLists.
For Linux/Mac users, the classical sequence should work:
mkdir build
cd build
cmake ..
make
For Windows users, some instructions are available on OpenCV website:
http://opencv.willowgarage.com/wiki/Getting_started .

** Synopsis and example

Run the generated executable 'test_voronoi' with no arguments.

